{"version":3,"file":"src_doc_lang_zh-CN_ts.js","mappings":"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","sources":["webpack://lath-docs/./src/doc/lang/zh-CN.ts","webpack://lath-docs/./src/doc/lang/zh-CN/allowHost.ts","webpack://lath-docs/./src/doc/lang/zh-CN/appletColor.ts","webpack://lath-docs/./src/doc/lang/zh-CN/appletEvents.ts","webpack://lath-docs/./src/doc/lang/zh-CN/appletManifestProcess.ts","webpack://lath-docs/./src/doc/lang/zh-CN/appletRefresh.ts","webpack://lath-docs/./src/doc/lang/zh-CN/appletSameOrigin.ts","webpack://lath-docs/./src/doc/lang/zh-CN/appletSlideView.ts","webpack://lath-docs/./src/doc/lang/zh-CN/appletView.ts","webpack://lath-docs/./src/doc/lang/zh-CN/appletViewType.ts","webpack://lath-docs/./src/doc/lang/zh-CN/applicationActiveApplet.ts","webpack://lath-docs/./src/doc/lang/zh-CN/applicationEvents.ts","webpack://lath-docs/./src/doc/lang/zh-CN/applicationExists.ts","webpack://lath-docs/./src/doc/lang/zh-CN/applicationGet.ts","webpack://lath-docs/./src/doc/lang/zh-CN/applicationInstall.ts","webpack://lath-docs/./src/doc/lang/zh-CN/applicationPreActiveApplet.ts","webpack://lath-docs/./src/doc/lang/zh-CN/applicationPushWindow.ts","webpack://lath-docs/./src/doc/lang/zh-CN/applicationTo.ts","webpack://lath-docs/./src/doc/lang/zh-CN/applicationUpdateGlobalCSSVariables.ts","webpack://lath-docs/./src/doc/lang/zh-CN/applicationUpdateSafeArea.ts","webpack://lath-docs/./src/doc/lang/zh-CN/apply.ts","webpack://lath-docs/./src/doc/lang/zh-CN/background.ts","webpack://lath-docs/./src/doc/lang/zh-CN/capture.ts","webpack://lath-docs/./src/doc/lang/zh-CN/color.ts","webpack://lath-docs/./src/doc/lang/zh-CN/components.ts","webpack://lath-docs/./src/doc/lang/zh-CN/customEffect.ts","webpack://lath-docs/./src/doc/lang/zh-CN/defaultSlideViewApplets.ts","webpack://lath-docs/./src/doc/lang/zh-CN/events.ts","webpack://lath-docs/./src/doc/lang/zh-CN/free.ts","webpack://lath-docs/./src/doc/lang/zh-CN/globalCSSVariables.ts","webpack://lath-docs/./src/doc/lang/zh-CN/holdBack.ts","webpack://lath-docs/./src/doc/lang/zh-CN/index.ts","webpack://lath-docs/./src/doc/lang/zh-CN/inject.ts","webpack://lath-docs/./src/doc/lang/zh-CN/install.ts","webpack://lath-docs/./src/doc/lang/zh-CN/level.ts","webpack://lath-docs/./src/doc/lang/zh-CN/limit.ts","webpack://lath-docs/./src/doc/lang/zh-CN/mainScrollId.ts","webpack://lath-docs/./src/doc/lang/zh-CN/mediaGuard.ts","webpack://lath-docs/./src/doc/lang/zh-CN/modality.ts","webpack://lath-docs/./src/doc/lang/zh-CN/notFound.ts","webpack://lath-docs/./src/doc/lang/zh-CN/openSlideViewLeftHolder.ts","webpack://lath-docs/./src/doc/lang/zh-CN/portal.ts","webpack://lath-docs/./src/doc/lang/zh-CN/preIndex.ts","webpack://lath-docs/./src/doc/lang/zh-CN/prerender.ts","webpack://lath-docs/./src/doc/lang/zh-CN/presetEffect.ts","webpack://lath-docs/./src/doc/lang/zh-CN/pullToRefresh.ts","webpack://lath-docs/./src/doc/lang/zh-CN/render.ts","webpack://lath-docs/./src/doc/lang/zh-CN/resource.ts","webpack://lath-docs/./src/doc/lang/zh-CN/safeArea.ts","webpack://lath-docs/./src/doc/lang/zh-CN/sandbox.ts","webpack://lath-docs/./src/doc/lang/zh-CN/singleFlow.ts","webpack://lath-docs/./src/doc/lang/zh-CN/singleLock.ts","webpack://lath-docs/./src/doc/lang/zh-CN/source.ts","webpack://lath-docs/./src/doc/lang/zh-CN/start.ts","webpack://lath-docs/./src/doc/lang/zh-CN/tapStatusBarToScrollToTop.ts","webpack://lath-docs/./src/doc/lang/zh-CN/timeout.ts","webpack://lath-docs/./src/doc/lang/zh-CN/title.ts","webpack://lath-docs/./src/doc/lang/zh-CN/transient.ts","webpack://lath-docs/./src/doc/lang/zh-CN/tunneling.ts","webpack://lath-docs/./src/doc/lang/zh-CN/tutorialSlidingCards.ts","webpack://lath-docs/./src/doc/lang/zh-CN/unusedShadowDom.ts","webpack://lath-docs/./src/doc/lang/zh-CN/useMirroring.ts"],"sourcesContent":["import install from './zh-CN/install'\nimport start from './zh-CN/start'\nimport title from './zh-CN/title'\nimport source from './zh-CN/source'\nimport index from './zh-CN/index'\nimport free from './zh-CN/free'\nimport level from './zh-CN/level'\nimport color from './zh-CN/color'\nimport presetEffect from './zh-CN/presetEffect'\nimport customEffect from './zh-CN/customEffect'\nimport modality from './zh-CN/modality'\nimport background from './zh-CN/background'\nimport timeout from './zh-CN/timeout'\nimport limit from './zh-CN/limit'\nimport resource from './zh-CN/resource'\nimport prerender from './zh-CN/prerender'\nimport components from './zh-CN/components'\nimport mediaGuard from './zh-CN/mediaGuard'\nimport portal from './zh-CN/portal'\nimport allowHost from './zh-CN/allowHost'\nimport sandbox from './zh-CN/sandbox'\nimport capture from './zh-CN/capture'\nimport appletManifestProcess from './zh-CN/appletManifestProcess'\nimport inject from './zh-CN/inject'\nimport render from './zh-CN/render'\nimport safeArea from './zh-CN/safeArea'\nimport globalCSSVariables from './zh-CN/globalCSSVariables'\nimport tunneling from './zh-CN/tunneling'\nimport unusedShadowDom from './zh-CN/unusedShadowDom'\nimport defaultSlideViewApplets from './zh-CN/defaultSlideViewApplets'\nimport openSlideViewLeftHolder from './zh-CN/openSlideViewLeftHolder'\nimport pullToRefresh from './zh-CN/pullToRefresh'\nimport tapStatusBarToScrollToTop from './zh-CN/tapStatusBarToScrollToTop'\nimport mainScrollId from './zh-CN/mainScrollId'\nimport apply from './zh-CN/apply'\nimport singleFlow from './zh-CN/singleFlow'\nimport singleLock from './zh-CN/singleLock'\nimport preIndex from './zh-CN/preIndex'\nimport notFound from './zh-CN/notFound'\nimport holdBack from './zh-CN/holdBack'\nimport events from './zh-CN/events'\nimport useMirroring from './zh-CN/useMirroring'\nimport transient from './zh-CN/transient'\nimport applicationTo from './zh-CN/applicationTo'\nimport applicationPushWindow from './zh-CN/applicationPushWindow'\nimport applicationInstall from './zh-CN/applicationInstall'\nimport applicationActiveApplet from './zh-CN/applicationActiveApplet'\nimport applicationPreActiveApplet from './zh-CN/applicationPreActiveApplet'\nimport applicationEvents from './zh-CN/applicationEvents'\nimport applicationGet from './zh-CN/applicationGet'\nimport applicationExists from './zh-CN/applicationExists'\nimport applicationUpdateSafeArea from './zh-CN/applicationUpdateSafeArea'\nimport applicationUpdateGlobalCSSVariables from './zh-CN/applicationUpdateGlobalCSSVariables'\nimport appletSlideView from './zh-CN/appletSlideView'\nimport appletView from './zh-CN/appletView'\nimport appletViewType from './zh-CN/appletViewType'\nimport appletRefresh from './zh-CN/appletRefresh'\nimport appletSameOrigin from './zh-CN/appletSameOrigin'\nimport appletColor from './zh-CN/appletColor'\nimport appletEvents from './zh-CN/appletEvents'\nimport tutorialSlidingCards from './zh-CN/tutorialSlidingCards'\n\nexport {\n  install,\n  start,\n  title,\n  source,\n  index,\n  free,\n  level,\n  color,\n  presetEffect,\n  customEffect,\n  modality,\n  background,\n  timeout,\n  limit,\n  resource,\n  prerender,\n  components,\n  mediaGuard,\n  portal,\n  allowHost,\n  sandbox,\n  capture,\n  appletManifestProcess,\n  inject,\n  render,\n  safeArea,\n  globalCSSVariables,\n  tunneling,\n  unusedShadowDom,\n  defaultSlideViewApplets,\n  openSlideViewLeftHolder,\n  pullToRefresh,\n  tapStatusBarToScrollToTop,\n  mainScrollId,\n  apply,\n  singleFlow,\n  singleLock,\n  preIndex,\n  notFound,\n  holdBack,\n  events,\n  useMirroring,\n  transient,\n  applicationTo,\n  applicationPushWindow,\n  applicationInstall,\n  applicationActiveApplet,\n  applicationPreActiveApplet,\n  applicationEvents,\n  applicationGet,\n  applicationExists,\n  applicationUpdateSafeArea,\n  applicationUpdateGlobalCSSVariables,\n  appletSlideView,\n  appletView,\n  appletViewType,\n  appletRefresh,\n  appletSameOrigin,\n  appletColor,\n  appletEvents,\n  tutorialSlidingCards\n}\n","export default {\n  title: 'AllowHost',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'AllowHost'\n      },\n      {\n        type: 'sub',\n        value: 'frameworksAppletConfig > allowHost'\n      },\n      {\n        type: 'text',\n        value: '当没有设置 [capture] 时，可通过该配置来过滤掉不安全的 host 地址，反之则不受限。（frameworks 程序卡专属配置）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              allowHost?: Array&lt;string>\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '该配置主要用于防止通过 url 参数拼接的方式使应用不按预期的访问外域网站，以防止产生危害。'\n      },\n      {\n        type: 'text',\n        value: '当 frameworks 模块设置了 [capture] 时，则会忽略该配置。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                frameworks: {\n                  allowHost: [\n                    'aaa.com',\n                    'bbb.com',\n                    'ccc.com'\n                  ]\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '一般程序卡页面中的 A 链接跳转行为会被自动捕获为应用内的新窗口打开，但有时并不希望所有的情况都是如此，因此可通过该选项进行一个有效域的管控，当域不匹配时则不会进行应用内的新窗口打开，而是直接新开浏览器窗口进行访问。'\n      },\n      {\n        type: 'tips',\n        value: '如果你的应用中可能存在由用户输入的可访问地址，那么你很可能需要这项配置，以此来强制新页面以新开浏览器窗口的方式访问。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Applet.color',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Applet.color'\n      },\n      {\n        type: 'sub',\n        value: 'Applet.color'\n      },\n      {\n        type: 'text',\n        value: '程序卡的背景色。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type color = string\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: 'color 来自于 config中配置，若未配置则返回 frameworks Applet 的 color 设置，若依然未配置或使用继承，则根据浏览器是否为 dark模式分别返回黑白两色。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const applet = await application.get('home')\n            console.log(applet.color)\n          </code-highlight>\n        `\n      }\n    ]\n  ]\n}","export default {\n  title: 'Applet Events',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Applet Events'\n      },\n      {\n        type: 'sub',\n        value: 'Applet > on'\n      },\n      {\n        type: 'text',\n        value: '常用事件监听（on, one, off）。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type ApplicationSafeAreaValue = string | Array&lt;string>\n            type GlobalCSSVariables = { [key: string]: string }\n            type TriggerEventArgsMap = {\n              show: [],\n              hide: [],\n              willShow: [],\n              willHide: [],\n              destroy: [],\n              pullToRefreshEnd: [],\n              pullToRefreshCancel: [],\n            }\n            type TriggerEventTypes = keyof TriggerEventArgsMap\n            type TriggerEventCallbackArgs&lt;N extends TriggerEventTypes> = TriggerEventArgsMap[N]\n            type TriggerEventCallback&lt;N extends TriggerEventTypes> = (...args: TriggerEventArgsMap[N]) => void\n            type TriggerEventTypesCallbacks = Record&lt;TriggerEventTypes, TriggerEventCallback&lt;keyof TriggerEventArgsMap>>\n            type on = &lt;T extends TriggerEventTypes, F extends TriggerEventCallback&lt;T>>(type: T, fn: F, groupName?: string) => this\n            type off = &lt;T extends TriggerEventTypes, F extends TriggerEventCallback&lt;T>>(type: T, fn: F) => this\n            type one = on\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '<b>show</b>'\n      },\n      {\n        type: 'text',\n        value: '程序卡显示。'\n      },\n      {\n        type: 'text',\n        value: '<b>hide</b>'\n      },\n      {\n        type: 'text',\n        value: '程序卡消失。'\n      },\n      {\n        type: 'text',\n        value: '<b>willShow</b>'\n      },\n      {\n        type: 'text',\n        value: '程序卡即将显示。'\n      },\n      {\n        type: 'text',\n        value: '<b>willHide</b>'\n      },\n      {\n        type: 'text',\n        value: '程序卡即将消失。'\n      },\n      {\n        type: 'text',\n        value: '<b>destroy</b>'\n      },\n      {\n        type: 'text',\n        value: '程序卡被销毁。'\n      },\n      {\n        type: 'text',\n        value: '<b>pullToRefreshEnd</b>'\n      },\n      {\n        type: 'text',\n        value: '程序卡下拉刷新结束。'\n      },\n      {\n        type: 'text',\n        value: '<b>pullToRefreshCancel</b>'\n      },\n      {\n        type: 'text',\n        value: '程序卡下拉刷新取消。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const applet = await application.get('home')\n            applet.on('willShow', () => {\n              //...\n            })\n          </code-highlight>\n        `\n      }\n    ]\n  ]\n}","export default {\n  title: 'AppletManifestProcess',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'AppletManifestProcess'\n      },\n      {\n        type: 'sub',\n        value: 'frameworlksAppletConfig > appletManifestProcess'\n      },\n      {\n        type: 'text',\n        value: '当程序卡载入时，其配置文件会先经此函数加工后再返回。（frameworks 程序卡专属配置）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              appletManifestProcess?: (config: AppletManifest) => AppletManifest\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '处理函数将传入当前处理程序卡配置，并接收一个新程序卡配置。'\n      },\n      {\n        type: 'text',\n        value: '可通过该配置对所有程序卡配置进行重写，比如设定统一的动画效果或对一些安全选项进行校验。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    appletManifestProcess: (manify) => {\n                      ... 处理\n                      return newManify\n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '程序卡配置中存在一些复杂选项，比如 inject、components 等，可通过此选项将可复用配置进行统一化管理。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Applet.refresh',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Applet.refresh'\n      },\n      {\n        type: 'sub',\n        value: 'Applet.refresh'\n      },\n      {\n        type: 'text',\n        value: '程序卡的视图对象。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type refresh = () => Promise<void>\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '平滑页面刷新，返回一个 Promise 对象。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const applet = await application.get('home')\n            applet.refresh()\n          </code-highlight>\n        `\n      }\n    ]\n  ]\n}","export default {\n  title: 'Applet.sameOrigin',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Applet.sameOrigin'\n      },\n      {\n        type: 'sub',\n        value: 'Applet.sameOrigin'\n      },\n      {\n        type: 'text',\n        value: '程序卡页面是否同源。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type sameOrigin = boolean\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '由 source.src 所配置的程序卡，若为同源返回 true。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const applet = await application.get('home')\n            console.log(applet.sameOrigin)\n          </code-highlight>\n        `\n      }\n    ]\n  ]\n}","export default {\n  title: 'Applet.slide',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Applet.slide'\n      },\n      {\n        type: 'sub',\n        value: 'Applet.slide'\n      },\n      {\n        type: 'text',\n        value: '程序坞的控制对象（Applet Snap 效果的模块切换器对象）。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface Slide {\n              to: (id: number | string) => Promise&lt;unknown> \n              index: number\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '“to” 函数能够接受一个序列（对应配置项 defaultSlideViewApplets 中的模块序列）/模块 id。'\n      },\n      {\n        type: 'text',\n        value: '“index” 属性可获取当前 SlideView 上所处于激活状态的程序卡的序列。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const applet = await application.get('home')\n            await applet.slide.to('pageA')\n            console.log(applet.slide.index)\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: 'SlideView 对象，即程序坞，关于他的创建请参照配置项：DefaultSlideViewApplets。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Applet.view',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Applet.view'\n      },\n      {\n        type: 'sub',\n        value: 'Applet.view'\n      },\n      {\n        type: 'text',\n        value: '程序卡的视图对象。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type view = HTMLElement | HTMLPortalElement | HTMLIFrameElement | null\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '视图的不同的元素类型由 viewType 而决定。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const applet = await application.get('home')\n            console.log(applet.view)\n          </code-highlight>\n        `\n      }\n    ]\n  ]\n}","export default {\n  title: 'Applet.viewType',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Applet.viewType'\n      },\n      {\n        type: 'sub',\n        value: 'Applet.viewType'\n      },\n      {\n        type: 'text',\n        value: '程序卡视图的类型。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type viewType = 'portal' | 'iframe' | 'shadow'\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '根据配置项 source 和 render 生成的程序卡分别对应 “iframe” 和 “shadow” 两种类型，而同时配有 source 和 portal 属性的程序卡则为 “portal” 类型。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const applet = await application.get('home')\n            console.log(applet.viewType)\n          </code-highlight>\n        `\n      }\n    ]\n  ]\n}","export default {\n  title: 'Application.activeApplet',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Application.activeApplet'\n      },\n      {\n        type: 'sub',\n        value: 'Application.activeApplet'\n      },\n      {\n        type: 'text',\n        value: '当前活动的 Applet。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type activeApplet = Applet\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '若当前可视区的程序卡为 home，那么访问该值则会返回 home 程序卡的 Applet 对象。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const { application } = await createApplication({\n              applets: {\n                ...\n              }\n            })\n            console.log(application.activeApplet)\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '若当前可视区的程序卡为 SlideView 模式中的程序卡，此时返回的值为为 SlideView 视窗的程序卡，而非 SlideView 视图中的子程序卡。'\n      },\n      {\n        type: 'tips',\n        value: '若想获得活动程序卡中的子程序卡可查阅 SlideView 的相关介绍。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Application Events',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Application Events'\n      },\n      {\n        type: 'sub',\n        value: 'Application > on'\n      },\n      {\n        type: 'text',\n        value: '常用事件监听（on, one, off）。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type ApplicationSafeAreaValue = string | Array&lt;string>\n            type GlobalCSSVariables = { [key: string]: string }\n            type TriggerEventArgsMap = {\n              'safeAreaChange': [ApplicationSafeAreaValue],\n              'globalCSSVariablesChange': [GlobalCSSVariables],\n              'transformStart': [Applet[]],\n              'transformEnd': [Applet[]],\n              'systemDidMount': [Applet],\n              'frameworksDidMount': [Applet],\n              'pullToRefreshReady': [],\n              'exit': [{ backoutCount: number }],\n              'back': [Applet],\n              'error': [e: unknown]\n            }\n            type TriggerEventTypes = keyof TriggerEventArgsMap\n            type TriggerEventCallbackArgs&lt;N extends TriggerEventTypes> = TriggerEventArgsMap[N]\n            type TriggerEventCallback&lt;N extends TriggerEventTypes> = (...args: TriggerEventArgsMap[N]) => void\n            type TriggerEventTypesCallbacks = Record&lt;TriggerEventTypes, TriggerEventCallback&lt;keyof TriggerEventArgsMap>>\n            type on = &lt;T extends TriggerEventTypes, F extends TriggerEventCallback&lt;T>>(type: T, fn: F, groupName?: string) => this\n            type off = &lt;T extends TriggerEventTypes, F extends TriggerEventCallback&lt;T>>(type: T, fn: F) => this\n            type one = on\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '<b>safeAreaChange</b>'\n      },\n      {\n        type: 'text',\n        value: '可监听安全边距更新，若 updateSafeArea 被调用时通知，返回安全边距对象。'\n      },\n      {\n        type: 'text',\n        value: '<b>globalCSSVariablesChange</b>'\n      },\n      {\n        type: 'text',\n        value: '可监听全局样式变量更新，若 updateGlobalCSSVariables 被调用时通知，返回更新样式变量对象。'\n      },\n      {\n        type: 'text',\n        value: '<b>transformStart</b>'\n      },\n      {\n        type: 'text',\n        value: '当发生窗口切换前将通知，返回窗口程序卡数组。'\n      },\n      {\n        type: 'text',\n        value: '<b>transformEnd</b>'\n      },\n      {\n        type: 'text',\n        value: '当发生窗口切换完成时将通知，返回窗口程序卡数组。'\n      },\n      {\n        type: 'text',\n        value: '<b>systemDidMount</b>'\n      },\n      {\n        type: 'text',\n        value: '当系统程序卡执行完成时将通知，并返回 System Applet。'\n      },\n      {\n        type: 'text',\n        value: '<b>frameworksDidMount</b>'\n      },\n      {\n        type: 'text',\n        value: '当框架程序卡执行完成时将通知，并返回 Frameworks Applet。'\n      },\n      {\n        type: 'text',\n        value: '<b>pullToRefreshReady</b>'\n      },\n      {\n        type: 'text',\n        value: '当配置使用了下拉刷新，且下拉刷新原子能力准备完成时发出通知。'\n      },\n      {\n        type: 'text',\n        value: '<b>exit</b>'\n      },\n      {\n        type: 'text',\n        value: '当程序触发退出应用时发出通知，返回尝试退出累积次数。'\n      },\n      {\n        type: 'text',\n        value: '<b>back</b>'\n      },\n      {\n        type: 'text',\n        value: '当程序触发历史返回时通知，返回目标 Applet。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const { application } = await createApplication({\n              applets: {\n                ...\n              }\n            })\n            application.on('frameworksDidMount', () => {\n              //...\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: 'Application Events 上的事件使用场景一般不高，比较常用的事件在 Applet Events 上的比较多一些。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Application.exists',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Application.exists'\n      },\n      {\n        type: 'sub',\n        value: 'Application.exists'\n      },\n      {\n        type: 'text',\n        value: '取得当前页面是否为首次载入的历史序列上。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type exists = boolean\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '当你首次访问链接进入应用时，Lath 会记录你当前历史节点的位置，凡是发生页面活动后都可以检测当前位置是否发生了变动，如果该值为 false，则表示历史已经发生变化，即当前历史非首次进入的历史。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            console.log(application.exists)\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '该方法仅记录初次载入的节点位置，例如你在任何页面发生浏览器刷新都会导致该节点重新标记位置。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Application.get/add/del',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Application.get'\n      },\n      {\n        type: 'sub',\n        value: 'Application.get'\n      },\n      {\n        type: 'text',\n        value: '获得程序卡对象 Applet。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type get = (id: string) => Promise&lt;Applet>\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '“id”为要获取的程序卡名。'\n      },\n      {\n        type: 'text',\n        value: '其返回为一个 Promise。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const home = await application.get('home')\n          </code-highlight>\n        `\n      }\n    ],\n    [\n      {\n        type: 'title',\n        value: 'Application.del'\n      },\n      {\n        type: 'sub',\n        value: 'Application.del'\n      },\n      {\n        type: 'text',\n        value: '删除一个程序卡对象 Applet。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type del = (id: string) => Promise&lt;boolean>\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '“id”为要删除的程序卡名。'\n      },\n      {\n        type: 'text',\n        value: '其返回为一个 Promise，删除成功你将获得 true。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const isDel = await application.del('demo')\n          </code-highlight>\n        `\n      }\n    ],\n    [\n      {\n        type: 'title',\n        value: 'Application.add'\n      },\n      {\n        type: 'sub',\n        value: 'Application.add'\n      },\n      {\n        type: 'text',\n        value: '增加一个程序卡对象 Applet。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            declare interface AppletManifest {\n              config: AppletConfig\n              resources?: AppletResources\n              components?: ((w: Window) => CustomElementConstructor)[]\n              events?: Partial<AppletEvents>\n            }\n            type add = (id: string, manifest: AppletManifest) => Applet\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '“id”为要新增的程序卡名。'\n      },\n      {\n        type: 'text',\n        value: '其返回为新程序卡对象 Applet。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const newApplet = await application.add('demo', {\n              config: {\n                title: 'title',\n                ...\n              }\n            })\n          </code-highlight>\n        `\n      }\n    ]\n  ]\n}","export default {\n  title: 'Application.install',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Application.install'\n      },\n      {\n        type: 'sub',\n        value: 'Application.install'\n      },\n      {\n        type: 'text',\n        value: '通过 ServiceWorker 安装应用。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            declare interface ServiceWorkerInstallConfig {\n              swPathUrl?: string\n              scope?: string\n              source?: Array<string>\n            }\n            type install = (options: ServiceWorkerInstallConfig, version: string) => Promise&lt;ServiceWorkerRegistration>\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: 'ServiceWorker 能加速你应用的二次访问速度，并在弱网甚至无网环境下可打开。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    level: 1\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '关于 ServiceWorker 请参照 W3C 介绍。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Application.preActiveApplet',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Application.preActiveApplet'\n      },\n      {\n        type: 'sub',\n        value: 'Application.preActiveApplet'\n      },\n      {\n        type: 'text',\n        value: '前一个活动的 Applet。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type preActiveApplet = Applet\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '若前一个可视区的程序卡为 home，那么访问该值则会返回 home 程序卡的 Applet 对象。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const { application } = await createApplication({\n              applets: {\n                ...\n              }\n            })\n            console.log(application.preActiveApplet)\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '程序卡的获取逻辑与<a href=\"?id=applicationActiveApplet#doc\" preset-effect=\"slide\" clone-as=\"doc-newWindow-applicationActiveApplet\">Application.activeApplet</a>保持一致。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Application.pushWindow',\n  content: [\n    [\n      {\n        type: 'Application.pushWindow',\n        value: 'Level'\n      },\n      {\n        type: 'sub',\n        value: 'Application.pushWindow'\n      },\n      {\n        type: 'text',\n        value: '转场到指定程序卡或 url 的页面。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            declare interface TransformActionOrigin {\n              x: number,\n              y: number\n            }\n            type PushWindowOptions = [\n              url: string,\n              title: string,\n              preset: string,\n              cloneAs?: string,\n              touches?: TouchEvent | TransformActionOrigin\n            ]\n            type pushWindow = (url: string, title = '', preset = 'slide', cloneAs?: string, touches?: TouchEvent | TransformActionOrigin) => Promise<void>\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '同 <a href=\"?id=applicationTo#doc\" preset-effect=\"slide\" clone-as=\"doc-newWindow-applicationTo\">Application.to</a> 相似，pushWindow 的第一个参数不仅可以传入一个程序卡 id，还可以传入一个页面 URL，以此来打开一个新生成的程序卡页面。'\n      },\n      {\n        type: 'text',\n        value: '<b>cloneAs</b>'\n      },\n      {\n        type: 'text',\n        value: '定义将该程序卡新克隆副本的名称，此时该克隆副本不会替换原有程序卡实例，而是作为一个新的程序卡独立存在。'\n      },\n      {\n        type: 'text',\n        value: '<b>preset</b>'\n      },\n      {\n        type: 'text',\n        value: '定义该程序卡被打开时所使用的内置的动画效果，其值为内置动画名。'\n      },\n      {\n        type: 'text',\n        value: '<b>title</b>'\n      },\n      {\n        type: 'text',\n        value: '定义打开程序卡的 title 标题。'\n      },\n      {\n        type: 'text',\n        value: '<b>touches</b>'\n      },\n      {\n        type: 'text',\n        value: '同 Application.to 中 touches 的部分。'\n      },\n      {\n        type: 'text',\n        value: '<b>url</b>'\n      },\n      {\n        type: 'text',\n        value: '打开新页面的 url（目标页面将会受到捕捉[capture]逻辑的影响）。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            application.pushWindow('http://www.xxxxx.com/index.html', '首页', 'zoom', 'newHome')\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: '若在iframe 页面中想要调用该能力时，可使用 postMessage 发送请求。'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            parent.postMessage({\n              action: 'pushWindow',\n              data: ['https://xxx.com/', 'title']\n            })\n          </code-highlight>\n        `\n      }\n    ]\n  ]\n}","export default {\n  title: 'Application.to',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Application.to'\n      },\n      {\n        type: 'sub',\n        value: 'Application.to'\n      },\n      {\n        type: 'text',\n        value: '转场到指定程序卡。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type TransformToOptions = [\n              id: string,\n              param?: string,\n              history?: -1 | 0 | 1,\n              touches?: TouchEvent | TransformActionOrigin\n            ]\n            type to = (...args: TransformToOptions) => Promise<void>\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '<b>id</b>'\n      },\n      {\n        type: 'text',\n        value: '跳转到指定 id 的程序卡。'\n      },\n      {\n        type: 'text',\n        value: '<b>param</b>'\n      },\n      {\n        type: 'text',\n        value: '跳转程序卡所携带的参数（参数字符串）。'\n      },\n      {\n        type: 'text',\n        value: '<b>history</b>'\n      },\n      {\n        type: 'text',\n        value: '为 -1 时不推入到历史记录，为 0 时替换当前历史记录，为 1 时推入新的历史记录。'\n      },\n      {\n        type: 'text',\n        value: '<b>touches</b>'\n      },\n      {\n        type: 'text',\n        value: '为发生点击行为的元素点击的 TouchEvent 对象，或直接定义的发生事件 x, y 坐标值的 TransformActionOrigin 对象，用做某些需要根据起始位置而发生的转场动画。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            application.to('home', '?id=100', 1)\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '该函数为一个异步函数，若访问程序卡不存在则会尝试进入 404程序卡， 并将原有携带参以及通过参数“__notFoundId”将该模块 id，一并传递给 404 程序卡。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Application.updateGlobalCSSVariables',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Application.updateGlobalCSSVariables'\n      },\n      {\n        type: 'sub',\n        value: 'Application.updateGlobalCSSVariables'\n      },\n      {\n        type: 'text',\n        value: '更新应用的全局 CSS 变量（受同源策略限制）。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type ApplicationSafeAreaValue = string | Array<string>\n            type updateSafeArea = (data: ApplicationSafeAreaValue) => void\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '执行更新时，所有生命周期内的模块都将进行实时的样式变量更新。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            application.updateGlobalCSSVariables({\n              '---common-button-color': '#000000',\n              '---common-button-width': '100%',\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '跨域模块页面需要自行处理，处理方法请参考 Application.updateSafeArea 相关介绍。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Application.updateSafeArea',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Application.updateSafeArea'\n      },\n      {\n        type: 'sub',\n        value: 'Application.updateSafeArea'\n      },\n      {\n        type: 'text',\n        value: '更新应用的安全边距（受同源策略限制）。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type ApplicationSafeAreaValue = string | Array<string>\n            type safeArea = (data: ApplicationSafeAreaValue) => void \n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '其初始值请参照模块配置项 [safeArea]。'\n      },\n      {\n        type: 'text',\n        value: 'updateSafeArea 参数为一个数组，同 CSS Margin 一样通过顺时针枚举表达。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            application.updateSafeArea(['48px', 0, '60px', 0])\n            application.updateSafeArea(['48px', 0, '60px'])\n            application.updateSafeArea(['60px', 0])\n            application.updateSafeArea(['48px'])\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '在应用中安全距离并不一定指的是系统默认刘海屏，而是由框架程序卡所叠加的安全区域，而当框架交互发生安全边距变化时，则可通过该方法控制各程序卡的显示逻辑。'\n      },\n      {\n        type: 'text',\n        value: '非同源程序卡页面不受此控制，但可通过自行建立 postMessage 来同步次操作。另外，在 Application 对象上可通过 “on/one” 来监听 “safeAreaChange” 事件。'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            application.on('safeAreaChange', (data) => {\n              console.log(data)\n              // applet 为跨域页面模块\n              // applet.view 为跨域页面 iframe\n              applet.view.postMessage({\n                action: 'safeAreaChange',\n                data\n              }, '*')\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'tips',\n        value: '在配置中的 events 定义函数中以及通过 Application.get 等方法都可直接获取目标程序卡对象 Applet。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Apply&UnApply',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Apply&UnApply'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > apply'\n      },\n      {\n        type: 'text',\n        value: '在同源程序卡中启用可预置的能力。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type AppletApplyMabyeOptions = 'smart-setTimeout' | 'smart-setInterval' | 'link-new-viewport' | 'tap-highlight'\n            type AppletApplyOptions = Array&lt;AppletApplyMabyeOptions>\n            type AppletApplyOptionsParam = {\n              'tap-highlight'?: {\n                selector: string\n              }\n            }\n            interface AppletBaseConfig {\n              apply?: AppletApplyOptions\n              applyOptions?: AppletApplyOptionsParam\n              unApply?: AppletApplyOptions\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: 'apply 预置了以下可用能力：'\n      },\n      {\n        type: 'text',\n        value: `\n          <ul>\n            <li><b>smart-setTimeout</b> 当程序卡窗口不可见时或正处于窗口动画过程中时，所有 setTimeout 会自动暂停执行，直到模块动画停止并可见时自动恢复执行。</li>\n            <li><b>smart-setInterval</b> 同 smart-setTimeout</li>\n            <li><b>link-new-viewport</b> 当程序卡页面中有使用 a链接或 window.open 方法打开页面时，Lath 容器会自动进行捕捉拦截，并将页面内容生成新的程序卡，之后再进行加载展示。若 A链接设置 target='_parent' 或 target='_top' 时则不会进行捕获，以浏览器新开窗口打开。在 A链接中还可以设置动画效果和设置克隆为新模块 preset-effect=\"预置动画名\"，clone-as=\"新模块名\"</li>\n            <li><b>tap-highlight</b> 所有 a链接 在点击时会自动添加半透明蒙层高亮提示效果</li>\n          </ul>\n        `\n      },\n      {\n        type: 'tips',\n        value: '在 A链接上使用 clone-as属性时，目的是为了让同一程序卡以多个分身打开，比如文章详情程序卡，当其参数不同时可同时以分身打开多篇文章，而不是在同一个实例中更新文章。'\n      },\n      {\n        type: 'text',\n        value: '以上选项默认均开启，若不想开启可使用 unApply 配置项。'\n      },\n      {\n        type: 'text',\n        value: 'unApply 同 apply 选项相背，它将禁止配置中的预置能力。'\n      },\n      {\n        type: 'text',\n        value: 'applyOptions 可针对每项能力增加可用参数，目前可为\"tap-highlight\"提供高亮选择器\"selector\"，当点击元素匹配时将增加高亮效果，同时会在元素上新增\"tap-highlight\"属性，可用作 CSS 样式自定义。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    unApply: ['link-new-viewport'],\n                    applyOptions: {\n                      'tap-highlight': {\n                        selector: '.link'\n                      }\n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '注意，使用“link-new-viewport”时不能捕捉通过“location.href”方法实现的跳转行为。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Background',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Background'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > background'\n      },\n      {\n        type: 'text',\n        value: '程序卡是否被允许在后台运行。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              background?: boolean | 'auto'\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '<b>value = false</b>'\n      },\n      {\n        type: 'text',\n        value: '模块切换动画结束后会被立即销毁。'\n      },\n      {\n        type: 'text',\n        value: '<b>value = true</b>'\n      },\n      {\n        type: 'text',\n        value: '模块不会被销毁（仅当页面 load 成功时）；例外情况是当 timeout 超时时，在启动前会被销毁。'\n      },\n      {\n        type: 'text',\n        value: '<b>value = \\'auto\\'</b>'\n      },\n      {\n        type: 'text',\n        value: '当设置成自动时模块会进行智能的判断是否销毁，当触发以下几种情况时则会被销毁：'\n      },\n      {\n        type: 'text',\n        value: `\n          <ul>\n            <li>页面设置了 src，且不同源时</li>\n            <li>页面中包含了 object、embed、applet、iframe 对象时</li>\n            <li>页面中包含了 video、audio 标签时，且开启智能媒体管理（mediaGuard）时进行自动暂停播放出错时</li>\n            <li>页面中存在节点变动操作在 3 秒钟内超过 10 次时</li>\n            <li>页面中总的节点操作在后台运行超过 1000 次时</li>\n          </ul>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    background: true\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '若从该程序卡进入 “Sheets Bottom\" 等 Modality 类型非全屏程序卡时，即便符合销毁条件也将不会执行。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Capture',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Capture'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > capture'\n      },\n      {\n        type: 'text',\n        value: '捕捉其它程序卡中的跳转链接，若匹配时则跳转至该程序卡。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              capture?: string | ((resolve: {\n                pathname: string\n                origin: string\n                host: string\n                hash: string\n                href: string\n                search: string\n                port: string\n                searchParams: URLSearchParams\n              }, url: string) => boolean)\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: 'capture 可接受一个“url path”，或一个捕捉函数，当其它程序卡中进行跳转行为时则可受到该捕获。'\n      },\n      {\n        type: 'text',\n        value: '捕捉函数返回 true 时，则代表跳转链接匹配，链接目标将由该程序卡替代。'\n      },\n      {\n        type: 'text',\n        value: '在捕捉后，如若跳转链接携带参数，将会把携带参数一并传与捕获者程序卡。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    capture: (resolve) => {\n                      return resolve.path === '/abc/abc'\n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '该程序卡是否被提前载入是捕获程序是否工作的重要前提，因此为确保该捕获者程序卡已经被提前依赖加载，则需要在之前程序卡配置选项[prerender]中包含对该依赖程序卡的提前载入。'\n      },\n      {\n        type: 'text',\n        value: '当开启此选项时，所有可被捕获的链接跳转行为都将交由该选项决定是否在应用内打开新窗，这意味着你的规则需要严谨的保障应用的安全性。'\n      },\n      {\n        type: 'text',\n        value: '若 frameworks 程序卡开启此选项时，所有未设置该选项的程序卡将默认由 frameworks 程序卡代为处理，同时需要注意的是配置项[allowHost]将失效，因为 capture 将优先代为处理。'\n      },\n      {\n        type: 'tips',\n        value: '仅当前程序卡在 [apply] 中开启了 link-new-viewport 时，捕获者程序卡才能正常捕获，否则不会进入捕获逻辑，但该选项是默认开启，除非你将其关闭。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Color',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Color'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > color'\n      },\n      {\n        type: 'text',\n        value: '定义程序卡的初始窗口背景色。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              color?: string\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '默认背景色可以在程序卡未加载完成时呈现良好的视觉过渡。'\n      },\n      {\n        type: 'text',\n        value: '默认值会根据浏览器是否为“Dark 模式”来自动填充黑色/白色。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    color: '#000'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '请选用合适的背景色来填充程序卡窗口，以确保视觉效果的连贯性。'\n      },\n      {\n        type: 'tips',\n        value: '当背景色与程序卡内容不一致时，用户很有可能见到一个闪烁。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Components',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Components'\n      },\n      {\n        type: 'sub',\n        value: 'AppletManifest > components'\n      },\n      {\n        type: 'text',\n        value: '属于同源的程序卡页面可与主程序卡页面共享 Web Components。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletManifest {\n              components?: ((w: Window) => CustomElementConstructor)[]\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: 'Web Components 作为面向未来的组件标准，不仅易于共享也能极大程度上提升页面的体验性能。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            export const getCodeHighlighter = (shadowWindow): CustomElementConstructor => {\n              class CodeHighlighter extends shadowWindow.HTMLElement {\n                constructor () {\n                  super()\n                  const shadowRoot = this.attachShadow({ mode: 'open' })\n                  shadowRoot.appendChild(tmpl.content.cloneNode(true))\n                  ...\n                }\n              }\n      \n              return CodeHighlighter as unknown as CustomElementConstructor\n            }\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    title: 'Home Page'\n                  },\n                  components: [getCodeHighlighter]\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '由于 Web Components 是要共享到各个程序卡容器内，因此我们封装组件时需要将组件注册到该程序卡的 window 变量中。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Custom Effect',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Custom Effect'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > animation'\n      },\n      {\n        type: 'text',\n        value: '自定义程序卡窗口动画。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type AnimationFunction = (e: TransformAnimateEvent) => undefined | Promise&lt;boolean>\n            type AnimationPrestType = 'inherit'\n            | 'fade' | 'zoom' | 'sheets-bottom'\n            | 'flip' | 'flip-left' | 'flip-down' | 'flip-right' | 'flip-up'\n            | 'slide' | 'slide-left' | 'slide-right' | 'slide-up' | 'slide-down'\n            type AnimationConfig = AnimationPrestType | boolean | Array&lt;AnimationPrestType> | [AnimationFunction, AnimationFunction]\n            interface AppletBaseConfig {\n              animation?: AnimationConfig\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: 'TransformAnimateEvent 为自定义动画中提供的可用对象。'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface TransformActionOrigin {\n              x: number,\n              y: number\n            }\n            interface TransformAnimateEvent {\n              x: number\n              y: number\n              in: Animate\n              out: Animate\n              view: Array&lt;HTMLElement>\n              width: number\n              height: number\n              viewport: Array&lt;HTMLElement>\n              applets: Array&lt;Applet>\n              reverse: boolean\n              direction: number\n              backset: number\n              origin: string | Array&lt;number>\n              attach: string | Array&lt;number>\n              touches: TransformActionOrigin | undefined\n              historyDirection: number\n              callback: (stillness: boolean) => void\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '数组中的第一个函数为正向动画，第二个函数为逆向动画。如果值为函数，则可通过参数进行动画控制，比如 direction、historyDirection 等。'\n      },\n      {\n        type: 'text',\n        value: '程序卡层级关系还将反应在转场动画的效果上，从小到大为正向动画，反之从大到小时为逆向动画。'\n      },\n      {\n        type: 'text',\n        value: '当历史回退到层级为 0 的程序卡时，会触发 singleLock 事件，具体可查看 [singleLock] 配置中的相关描述。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            const getAnimate = (type: number) => {\n              return (e: TransformAnimateEvent) => {\n                let inO: number, outO: number, inV: Animate, outV: Animate\n                switch (type) {\n                  case 0:\n                    inO = 1\n                    outO = 0\n                    inV = e.in\n                    outV = e.out\n                    break\n                  case 1:\n                  default:\n                    inO = 0\n                    outO = 1\n                    inV = outV = e.in\n                }\n                inV.duration(0).ease('ease-out-expo').to(0, 0, 0).opacity(inO).end(function () {\n                  outV.duration(767).opacity(outO).end(function () {\n                    e.callback(false)\n                  })\n                })\n                return undefined\n              }\n            }\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    animation: [getAnimate(0), getAnimate(1)]\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '我们可以看到通过使用 TransformAnimateEvent 中提供的信息，即可完成 fade 的前进和后退动画效果。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'DefaultSlideViewApplets',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'DefaultSlideViewApplets'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > defaultSlideViewApplets'\n      },\n      {\n        type: 'text',\n        value: 'Snap 切换效果的程序坞，我们称之为 SlideView。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type SlideViewApplets = Array<{\n              id: string,\n              activate: 'lazy' | 'instant' | 'passive'\n            }>\n            interface AppletBaseConfig {\n              defaultSlideViewApplets?: SlideViewApplets\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '“id”表示要被加载的程序卡名'\n      },\n      {\n        type: 'text',\n        value: '“activate”表示程序卡的激活类型，共分为以下三种：'\n      },\n      {\n        type: 'text',\n        value: `\n          <ul>\n            <li>lazy: 在浏览器空闲时加载 Applet 页面内容。</li>\n            <li>instant: 即刻加载 Applet 页面内容。</li>\n            <li>passive: 在被激活时加载 Applet 页面内容。</li>\n          </ul>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n        <code-highlight type=\"ts\">\n          createApplication({\n            applets: {\n              frameworks: {\n                config: {\n                  defaultSlideViewApplets: [\n                    {\n                      id: \"appletA\",\n                      activate: 'instant'\n                    },\n                    {\n                      id: \"appletB\",\n                      activate: 'lazy'\n                    }\n                  ]\n                }\n              }\n            }\n          })\n        </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '设定 defaultSlideViewApplets 的程序卡将不再具有自身的视图（frameworks Applet 除外），而是其中嵌套了其它的程序卡视图，因此该配置与[source]相冲突，不应同时设置。'\n      },\n      {\n        type: 'tips',\n        value: '另外使用“API-Applet.slide.to”可使程序坞滑动到到指定程序卡位置。'\n      }\n    ],\n    [\n      {\n        type: 'title',\n        value: 'OpenSlideViewLeftHolder'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > openSlideViewLeftHolder'\n      },\n      {\n        type: 'text',\n        value: '开启后，在 SlideView 效果下（defaultSlideViewApplets 配置时），最左侧边缘滑动时会允许退出应用。'\n      },\n      {\n        type: 'tips',\n        value: '该配置主要用于解除在首条历史记录下的退出受阻，若浏览历史记录大于 1 时则大多情况下不存在边缘滑动受阻的情况，若不开启则，在 ios 设备中可能出现边缘滑动时仅会触发边缘弹性，而不会回退到上一级。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              openSlideViewLeftHolder?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '该值默认为 false。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    defaultSlideViewApplets: [\n                      {\n                        id: \"appletA\",\n                        activate: 'instant'\n                      },\n                      {\n                        id: \"appletB\",\n                        activate: 'lazy'\n                      }\n                    ],\n                    openSlideViewLeftHolder: true\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '开启该选项后需要注意程序卡左侧边缘将产生 20px 的无反馈区域，开发时应注意预留该安全操作距离。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Events',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Events'\n      },\n      {\n        type: 'sub',\n        value: 'AppletManifest > events'\n      },\n      {\n        type: 'text',\n        value: '注册程序卡的事件回调。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            declare interface AppletEvents {\n              transformStart: (applet: Applet) => undefined | 'break'\n              transformEnd: (applet: Applet) => void\n              boot: (applet: Applet) => void\n              load: (applet: Applet) => void\n              loadError: (applet: Applet) => void\n              preload: (applet: Applet) => void\n              destroy: (applet: Applet) => void\n            }\n            declare interface AppletManifest {\n              events?: Partial<AppletEvents>\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '在程序卡中注册生命周期中的事件回调函数。'\n      },\n      {\n        type: 'text',\n        value: `\n          <ul>\n            <li><b>transformStart</b> 程序卡转场动画开始事件。需要注意的是 transformStart 可选择返回一个字符串‘break’，此时模块转场将被终止执行。</li>\n            <li><b>transformEnd</b> 程序卡转场动画结束事件。</li>\n            <li><b>boot</b> 程序卡启动事件（每个生命周期内仅一次）。</li>\n            <li><b>load</b> source 类型程序卡的源代码加载完成事件。</li>\n            <li><b>loadError</b> source 类型程序卡的源代码加载错误事件。</li>\n            <li><b>preload</b> 程序卡预加载完事件。</li>\n            <li><b>destroy</b> 程序卡被销毁事件。</li>\n          </ul>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    title: 'home'\n                  },\n                  events: {\n                    transformEnd: (applet) => {\n                      // ...\n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '在程序卡注册事件中仅提供必要的事件，如需更多事件则可以使用 Applet 对象上的监听函数，请参照 API - Application Events。'\n      },\n      {\n        type: 'tips',\n        value: '程序卡配置中的事件都是运行在程序卡容器外的，当程序卡销毁时配置中的环境变量并不会随之消失，因此必须对配置文件中的逻辑质量负责，避免产生副作用，并且合理控制逻辑大小（不建议在此处处理复杂逻辑）。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Free',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Free'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > free'\n      },\n      {\n        type: 'text',\n        value: '定义程序卡的窗口展示类型。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              free?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: 'free 等于 true 时，程序卡以“全屏模式”运行，即不受框架程序卡（Applets[id = frameworks]）的约束。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    free: true\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '假设 frameworks 程序卡是一个带有 tabBar 功能的模块，此时程序卡将直接覆盖整个框架程序卡运行，反之程序卡则会在框架程序卡之内运行（即表现为 tabBar 覆盖在程序卡之上）。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'GlobalCSSVariables',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'GlobalCSSVariables'\n      },\n      {\n        type: 'sub',\n        value: 'FrameworksAppletConfig > globalCSSVariables'\n      },\n      {\n        type: 'text',\n        value: '设定应用的全局 CSS 变量。（frameworks 程序卡专属配置）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type GlobalCSSVariables = { [key: string]: string }\n            interface AppletBaseConfig {\n              globalCSSVariables?: GlobalCSSVariables | (() => GlobalCSSVariables)\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '与 [safeArea] 相似，同样只能在同域程序卡页面下生效。'\n      },\n      {\n        type: 'text',\n        value: '如果需要动态的修改或增加这个值则可以通过 “API-updateGlobalCSSVariables” 事件来进行更新'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    globalCSSVariables: {\n                      '--main-color': '#fff',\n                      '--title-font-size': '28px'\n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '配合 “API-updateGlobalCSSVariables” 使用，可创造出丝滑的主题切换效果。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'HoldBack',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'HoldBack'\n      },\n      {\n        type: 'sub',\n        value: 'FrameworksAppletConfig > holdBack'\n      },\n      {\n        type: 'text',\n        value: '阻止主程序退出。（frameworks 程序卡专属配置）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface FrameworksAppletConfig {\n              holdBack?: (backoutCount: number) => boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '需配合 [singleLock] 开启时有效，当用户进行返回操作，且页面即将退出时，会通过该函数（如果被阻止，backCount 为点击返回的次数）进行校验，返回 true 时为阻止应用页面退出，否则会允许应用的直接退出。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                frameworks: {\n                  config: {\n                    singleLock: true,\n                    holdBack: (event) => {\n                      // 判断是否退出\n                      return true\n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: '如上配置，从其它页面跳转进入到应用时，当点击浏览器返回按钮时并不会退出应用页面，而是会通过 Frameworks Applet 中的 [holdBack] 配置进行判断是否应该被退出，并同时返回用户点击返回按钮的次。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Index',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Index'\n      },\n      {\n        type: 'sub',\n        value: 'FrameworksAppletConfig > index'\n      },\n      {\n        type: 'text',\n        value: '定义应用的默认入口的程序卡。（frameworks 程序卡专属配置）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface FrameworksAppletConfig {\n              index?: string\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '启动 Lath 应用时首先会先启动 frameworks 程序卡，然后根据“index”配置启动首页程序卡。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                frameworks: {\n                  config: {\n                    index: 'home'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: '当应用启动时将首先初始化名称为“home”的程序卡。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Inject',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Inject'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > inject'\n      },\n      {\n        type: 'text',\n        value: '当为同源程序卡页面时，可在程序卡页面载入前对程序卡页面内注入设定的全局变量与方法，比如注入一些“jsBridge”、通用变量或者改写全局对象等。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              inject?: (w: Window, m: Applet) => void\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '比如程序卡中的链接跳转是通过“jsBridge”进行的，因此 Lath 并无法自动捕捉，因此现在你想要改写该逻辑，那么现在你则可以通过该选项来进行对其改写。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    inject: (appletWindow, applet) => {\n                      appletWindow.open = (url) => {\n                        return applet.application.pushWindow(url).catch(() => {\n                          window.open(url)\n                        })\n                      }\n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '需要注意的是 inject 选项受同域限制，因此在跨域场景下无法使用。'\n      },\n      {\n        type: 'text',\n        value: 'inject 是一个强大的能力，你可以基于此开发出不可思议的能力。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Install & Preface',\n  content: [\n    [\n      {\n        type: 'title',\n        value: '安装'\n      },\n      {\n        type: 'text',\n        value: '使用 <b>npm / yarn</b> 安装'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"bash\">\n            $ npm install lath --save\n            // or\n            $ yarn add lath\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: 'Lath(中文名：板条) 是一个体验增强容器，其初始依赖非常小，仅有 <b>5kb</b> 左右。它的核心能力都是原子化的，只有在被需要时才会动态载入依赖。'\n      }\n    ],\n    [\n      {\n        type: 'title',\n        value: '为什么使用它？'\n      },\n      {\n        type: 'text',\n        value: '它能让你的页面体验更上一阶，实现媲美原生 Apps 的效果，比如<a to-applet=\"doc?id=pullToRefresh\" clone-as=\"popDoc\">预载二级页面</a>，<a>Sheets Bottom</a> 交互效果，<a to-applet=\"doc?id=pullToRefresh\" clone-as=\"popDoc\">平滑无闪烁下拉刷新</a>，实现无缝的<a to-applet=\"doc?id=presetEffect\" clone-as=\"popDoc\">页面转场效果</a>以及流畅的<a to-applet=\"doc?id=presetEffect\" clone-as=\"popDoc\">页面横滑效果</a>等等诸多实现方案。'\n      },\n      {\n        type: 'text',\n        value: '当你要获得这一切时并无需对原有逻辑和框架做出改变，甚至在初始页面的加载时也不会有对页面性能产生阻塞。'\n      },\n      {\n        type: 'text',\n        value: 'Lath 在窗口管理上有着非常优秀的设计，不仅能自动帮你进行资源回收，还能对页面间的事件进程进行自动管控，用它创建的应用是真正能达到媲美 Native Apps 的 Web App。'\n      },\n      {\n        type: 'text',\n        value: '接下来就开始上手吧！'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Level',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Level'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > level'\n      },\n      {\n        type: 'text',\n        value: '程序卡视图窗口显示层级。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              level?: number\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '一般首屏程序卡的层级为 0，根据访问深度而逐级增大。'\n      },\n      {\n        type: 'text',\n        value: '程序卡层级关系还将反应在转场动画的效果上，从小到大为正向动画，反之从大到小时为逆向动画。'\n      },\n      {\n        type: 'text',\n        value: '当历史回退到层级为 0 的程序卡时，会触发 singleLock 事件，具体可查看 [singleLock] 配置中的相关描述。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    level: 1\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '若跳转的两个模块是为同层级模块，则转场动画效果会被自动关闭。'\n      },\n      {\n        type: 'tips',\n        value: '为什么同级模块动画关闭？：同级模块动画关闭主要场景是用于 tab 切换，一般 tab 切换时不需要一个窗口动画效果，但是从其它层级的窗口切换过来时可能又是需要动画效果的。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Limit',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Limit'\n      },\n      {\n        type: 'sub',\n        value: 'frameworksAppletConfig > limit'\n      },\n      {\n        type: 'text',\n        value: '定义应用最大可缓存在后台的程序卡数量。（frameworks 程序卡专属配置）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              limit?: number\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '默认为 5, 最大值为 100。其表示为应用中所允许的最多可同时缓存在后台的程序卡，当超过时会根据访问的顺序，对先访问的模块进行依次销毁，若模块配置了背景运行(background = true)时则不受此规则的影响。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    limit: 10\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: 'limit 数量将影响应用运行时的内存占用，一般建议在 5-20。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'MainScrollId',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'MainScrollId'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > mainScrollId'\n      },\n      {\n        type: 'text',\n        value: '指定 Applet 的主滚动容器，其与 [tapStatusBarToScrollToTop] 和 [pullToRefresh] 能够联合使用。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              mainScrollId?: string\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '如果没有指定主滚动容器，则默认 &lt;define-applet> 元素为主滚动。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    mainScrollId: 'root'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '注意指定的滚动容器“id”不可存在于 ShadowDom 中。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'MediaGuard',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'MediaGuard'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > mediaGuard'\n      },\n      {\n        type: 'text',\n        value: '该设置开启时，会对同源程序卡页面中的视频和音频进行智能的管控，当模块隐藏时则自动暂停正在播放的音/视频，反之模块可见时则恢复暂停的音/视频。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              mediaGuard?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '一般场景下，自动媒体管控能帮你自动处理媒体状态，若自动处理失败则会强制销毁程序卡，背景运行(background=true)除外。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    mediaGuard: true\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '不开启此选项，你同样可以通过窗口可见事件进行手动管理 - 请参考 API - Application - Events。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Modality',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Modality'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > modality'\n      },\n      {\n        type: 'text',\n        value: '程序卡是否以模态框形式展示。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type ModalityType = 'sheets:bottom'\n            interface AppletBaseConfig {\n              modality?: ModalityType\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '目前仅支持 <b>sheets:bottom</b> 这一种类型的模态效果，表现为从底部弹升的覆盖窗口。'\n      },\n      {\n        type: 'text',\n        value: '<b>sheets:bottom</b> 类型还提供有一个自定义选项 <b>SheetsBottomOptions</b>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type ModalityType = 'sheets:bottom'\n            type SheetsBottomOptions = {\n              top?: string,\n              maskOpacity?: number\n              blockedHolderWidth?: number | 'string'\n              alwaysPopUp?: boolean\n              maskClosable?: boolean\n            }\n            interface AppletBaseConfig {\n              modality?: ModalityType\n              sheetsBottomOptions?: SheetsBottomOptions\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: `\n          <ul>\n            <li>\n              <b>top</b>: 视图顶部距离窗口顶部的边距离距离，支持 CSS 单位。\n            </li>\n            <li>\n              <b>maskOpacity</b>: 背景黑色蒙层的不透明度，默认为 0.3。\n            </li>\n            <li>\n              <b>blockedHolderWidth</b>: 左侧手指边缘滑动的安全边距（边距大小会覆盖可交互区域），边界值决定了左侧滑动关闭的灵敏度。\n            </li>\n            <li>\n              <b>alwaysPopUp</b>: 在窗口切换时是否始终保持弹出动画，默认为关闭，场景切换时窗口保持静止。\n            </li>\n            <li>\n              <b>maskClosable</b>: 点击背景蒙层是否允许关闭窗口，默认为关闭。\n            </li>\n          </ul>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                pageA: {\n                  config: {\n                    modality: 'sheets:bottom'\n                    sheetsBottomOptions: {\n                      top: '10%',\n                      maskOpacity: 0.5,\n                      blockedHolderWidth: 20,\n                      alwaysPopUp: false,\n                      maskClosable: true\n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '注意 sheetsBottomOptions 选项是 modality 选项为 \\'sheets:bottom\\' 时的进一步特性描述，需配合使用，单独使用时无效。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'NotFound',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'NotFound'\n      },\n      {\n        type: 'sub',\n        value: 'FrameworksAppletConfig > notFound'\n      },\n      {\n        type: 'text',\n        value: '404 程序卡。（frameworks 程序卡专属配置）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface FrameworksAppletConfig {\n              notFound?: string\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '若所请求的程序卡页面不存在时，则自动路由到该程序卡，若未配置时则会自动跳转到“id”为“404”的程序卡。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                frameworks: {\n                  config: {\n                    notFound: 'home'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: '404 模块主要用于对应用异常访问时的承接及统计等。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'OpenSlideViewLeftHolder',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'OpenSlideViewLeftHolder'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > openSlideViewLeftHolder'\n      },\n      {\n        type: 'text',\n        value: '开启后，在 SlideView 效果下（defaultSlideViewApplets 配置时），最左侧边缘滑动时会允许退出应用。'\n      },\n      {\n        type: 'tips',\n        value: '该配置主要用于解除在首条历史记录下的退出受阻，若浏览历史记录大于 1 时则大多情况下不存在边缘滑动受阻的情况，若不开启则，在 ios 设备中可能出现边缘滑动时仅会触发边缘弹性，而不会回退到上一级。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              openSlideViewLeftHolder?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '该值默认为 false。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    defaultSlideViewApplets: [\n                      {\n                        id: \"appletA\",\n                        activate: 'instant'\n                      },\n                      {\n                        id: \"appletB\",\n                        activate: 'lazy'\n                      }\n                    ],\n                    openSlideViewLeftHolder: true\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '开启该选项后需要注意程序卡左侧边缘将产生 20px 的无反馈区域，开发时应注意预留该安全操作距离。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Portal',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Portal'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > portal'\n      },\n      {\n        type: 'text',\n        value: '开启该属性的程序卡在浏览器支持 portal 特性时，在转场动画结束后会执行 portal 的激活操作，激活后程序卡页面将在新的上下文中运行。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              portal?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '程序卡的 source 配置应为链接模式，且与主应用同域。'\n      },\n      {\n        type: 'text',\n        value: '设置为 portal 的程序卡， 其[free]选项一般也应设置为 true。'\n      },\n      {\n        type: 'text',\n        value: '当浏览器不支持 portal 能力时会自动降级为一般容器模式。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    portal: true\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '该选项适用于功能独立且与主应用没有任何的联系的（如 apply、inject 等）程序卡，否则，将会导致这些依赖上下文的配置失效。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'PreIndex',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'PreIndex'\n      },\n      {\n        type: 'sub',\n        value: 'FrameworksAppletConfig > preIndex'\n      },\n      {\n        type: 'text',\n        value: '通过链接访问某个程序卡时，可在之前插入一个前置的程序卡。（frameworks 程序卡专属配置）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface FrameworksAppletConfig {\n              preIndex?: string\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '当通过访问页面 url 锚定到某个程序卡时，可以通过此配置项设置一个前置程序卡，此时访问该 url 链接时依然会优先访问锚定的程序卡，但当点击浏览器返回时并不会立刻退出，而是从锚定程序卡回退到通过该配置项插入的前置程序卡。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                frameworks: {\n                  config: {\n                    preIndex: 'home'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: '当访问链接所锚定的程序卡和 [preIndex] 或 [index] 相等时则不会在之前再次插入前置程序卡。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Prerender',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Prerender'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > prerender'\n      },\n      {\n        type: 'text',\n        value: '程序卡的预加载&预渲染。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              prerender?: Array&lt;string>\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '当前程序卡中如果存在链接到其它程序卡，且希望能预先载入这些程序卡时，则可进行设置该属性。页面会在空闲时对依赖的程序卡进行后台的预加载，包括文档中的 css 以及 js 等静态资源的预加载。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  prerender: [\\${AppletName}, \\${AppletName}]\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '当预载执行时，用户访问该程序卡时将节省内链静态资源的加载，但是对于脚本的动态数据请求并不会有所提前，如果想提前数据的加载，则需配合前一个程序卡使用[inject]能力或“postMessage”能力进行前置。'\n      },\n      {\n        type: 'tips',\n        value: 'prerender 目前浏览器尚无法完成预渲染工作，其当前阶段的能力表述更接近“prefetch”，尽管如此，但我们希望在未来能预留预渲染的能力，因此它依旧保留该选项为“prerender”的称呼。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Animate Effect',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Animate Effect'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > animation'\n      },\n      {\n        type: 'text',\n        value: '程序卡窗口转场预置动画效果。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'title',\n        value: 'Demo'\n      },\n      {\n        type: 'text',\n        value: `\n          <ul>\n            <li>左侧滑动(默认) <a href=\"#empty\" preset-effect=\"slide-left\" clone-as=\"empty-left\">slide-left</a></li>\n            <li>右侧滑动 <a href=\"#empty\" preset-effect=\"slide-right\" clone-as=\"empty-right\">slide-right</a></li>\n            <li>上侧滑动 <a href=\"#empty\" preset-effect=\"slide-up\" clone-as=\"empty-up\">slide-up</a></li>\n            <li>下侧滑动 <a href=\"#empty\" preset-effect=\"slide-down\" clone-as=\"empty-down\">slide-down</a></li>\n            <li>放大镜 <a href=\"#empty\" preset-effect=\"zoom\" clone-as=\"empty-zoom\">zoom</a></li>\n            <li>翻转 <a href=\"#empty\" preset-effect=\"flip\" clone-as=\"empty-flip\">flip</a></li>\n            <li>左侧翻转 <a href=\"#empty\" preset-effect=\"flip-left\" clone-as=\"empty-flip-left\">flip-left</a></li>\n            <li>右侧翻转 <a href=\"#empty\" preset-effect=\"flip-right\" clone-as=\"empty-flip-right\">flip-right</a></li>\n            <li>上侧翻转 <a href=\"#empty\" preset-effect=\"flip-up\" clone-as=\"empty-flip-up\">flip-up</a></li>\n            <li>下侧反转 <a href=\"#empty\" preset-effect=\"flip-down\" clone-as=\"empty-flip-down\">flip-down</a></li>\n            <li>渐变 <a href=\"#empty\" preset-effect=\"fade\" clone-as=\"empty-fade\">fade</a></li>\n          </ul>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type AnimationPrestType = 'inherit'\n            | 'fade' | 'zoom' | 'sheets-bottom'\n            | 'flip' | 'flip-left' | 'flip-down' | 'flip-right' | 'flip-up'\n            | 'slide' | 'slide-left' | 'slide-right' | 'slide-up' | 'slide-down'\n            interface AppletBaseConfig {\n              animation?: AnimationPrestType\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: 'Lath 提供了常见的动画效果选择，只需指定你预置的效果名即可实现炫酷的窗口动画。'\n      },\n      {\n        type: 'text',\n        value: '默认选项为 <b>slide-left</b> 效果，也是所有效果中<b>性能最佳的选项</b>。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    animation: 'slide'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '未设置程序卡动画效果时会默认继承 frameworks 程序卡中的动画效果。'\n      },\n      {\n        type: 'text',\n        value: '未被定义为程序卡的超链接新开窗口时的默认窗口效果为 slide。'\n      },\n      {\n        type: 'tips',\n        value: '每个预制的动画都包涵一个前进动画以及倒退动画，采用哪种效果将会受到你浏览历史的方向以及程序卡之间的[level]层级所决定。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'PullToRefresh',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'PullToRefresh'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > pullToRefresh'\n      },\n      {\n        type: 'text',\n        value: '开启后，在主滚动容器持续下拉手势时将会触发页面无缝刷新。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              pullToRefresh?: boolean\n              pullToRefreshTargetScrollId?: string\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '开启该选项的前提是“FrameworksApplet”也开启了该选项，否则将无法生效。'\n      },\n      {\n        type: 'text',\n        value: '下拉刷新将关联一个滚动容器，可通过“pullToRefreshTargetScrollId”指定容器“id”。'\n      },\n      {\n        type: 'text',\n        value: '若未指定容器，则会默认关联主滚动容器，主滚动条请参考配置项“mainScrollId”，默认主滚动关联为程序卡的 &lt;define-applet> 容器。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    pullToRefresh: true,\n                    pullToRefreshTargetScrollId: 'root'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '注意指定的滚动容器“id”不可存在于 ShadowDom 中。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Render',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Render'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > render'\n      },\n      {\n        type: 'text',\n        value: '除了通过配置项[source]定义程序卡视图，还可以通过 render 方法来直接渲染元素到程序卡内。'\n      },\n      {\n        type: 'text',\n        value: '系统模块和框架模块(system/frameworks Applet)的视图则仅能使用 render 来进行定义。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              render?: (target: HTMLElement) => void\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: 'render 函数将程序卡的根节点传入，开发者可将渲染视图直接插入到节点内。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    render: (target) => {\n                      target.innerHTML = \\`\n                        &lt;p>Hello World&lt;/p>\n                      \\`\n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '使用 render 函数的最佳实践方案是把业务逻辑与模块配置进行分离，可使用动态 import 来引入业务逻辑的部分。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Resource',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Resource'\n      },\n      {\n        type: 'sub',\n        value: 'AppletManifest > resource'\n      },\n      {\n        type: 'text',\n        value: '程序卡运行时所依赖的静态资源。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletResources {\n              script?: Array&lt;string>\n              image?: Array&lt;string>\n              worker?: Array&lt;string>\n              video?: Array&lt;string>\n              audio?: Array&lt;string>\n              font?: Array&lt;string>\n              style?: Array&lt;string>\n              html?: Array&lt;string>\n            }\n            interface AppletManifest {\n              resource?: AppletResources\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '从当前程序卡切换到下一程序卡时，若当前程序卡配置了预渲染依赖(prerender=[${nextApplet}])时，在下一个程序卡被加载前进行其静态资源的预载入，如 html 中的 script、css 标签等，对于这些内链的静态资源是无需进行声明配置的，但是对于页面运行期间通过脚本动态加载的内容，如 css 中的 font字体，动态产生的的媒体素材等，并不能完成预先的载入，此时则可通过 resource 配置项将可能发生加载的资源进行预载。'\n      },\n      {\n        type: 'text',\n        value: '程序卡层级关系还将反应在转场动画的效果上，从小到大为正向动画，反之从大到小时为逆向动画。'\n      },\n      {\n        type: 'text',\n        value: '当历史回退到层级为 0 的程序卡时，会触发 singleLock 事件，具体可查看 [singleLock] 配置中的相关描述。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  resource: [\n                    image: [\n                      'https://yourCDN.com/001.jpg',\n                      'https://yourCDN.com/002.jpg',\n                      'https://yourCDN.com/003.jpg'\n                    ]\n                  ],\n                  config: {\n                    title: 'Home Page'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '预载工作并不是立刻执行的，而是在浏览器空闲时按顺序依次载入。'\n      },\n      {\n        type: 'tips',\n        value: '非存在于 AppletResources 类型中的未知类型可尝试使用 script 类型进行预载。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'SafeArea',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'SafeArea'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > safeArea'\n      },\n      {\n        type: 'text',\n        value: '定义全局的 CSS 应用安全边距变量。（frameworks 程序卡专属配置）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type ApplicationSafeAreaValue = string | Array<string>\n            interface AppletBaseConfig {\n              safeArea?: ApplicationSafeAreaValue | (() => ApplicationSafeAreaValue)\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '值为数字时，分别按顺序表示 顶部、右侧、底部、左侧 的安全边距。'\n      },\n      {\n        type: 'text',\n        value: '设置该值后将会在程序卡的全局样式中注入 CSS 全局变量：--application-safe-area-top、--application-safe-area-right、--application-safe-area-bottom、--application-safe-area-left 四个对应的安全边距值。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    safeArea: ['44px', '0px', '0px', '0px']\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: '如果需要动态的修改这个值则可以通过发送“safeAreaChange”事件来进行更新。'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            application.trigger('safeAreaChange', ['88px', '0px', '0px', '0px'])\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '当 frameworks 程序卡带有头部导航时，为了能让程序卡正常预留导航栏高度，使用该配置能动态调整该高度。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Sandbox',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Sandbox'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > sandbox'\n      },\n      {\n        type: 'text',\n        value: '程序卡容器的沙盒限制。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            type SandboxOptions = Array&lt;'allow-same-origin' | 'allow-scripts' | 'allow-forms' | 'allow-modals' | 'allow-orientation-lock' | 'allow-popups'\n            | 'allow-pointer-lock' | 'allow-popups-to-escape-sandbox' | 'allow-presentation' | 'allow-top-navigation' | 'allow-top-navigation-by-user-activation'\n            | 'allow-downloads-without-user-activation' | 'allow-storage-access-by-user-activation' | 'allow-top-navigation-by-user-activation' | string>\n            interface AppletBaseConfig {\n              sandbox?: SandboxOptions\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '该选项仅适用于拥有[source]选项设定的程序卡。'\n      },\n      {\n        type: 'text',\n        value: '关于 Sandbox 的更多信息，请参照 W3C 定义。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    sandbox: 'allow-modals'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '若你的程序卡页面为第三方链接，出于对安全性的考虑可通过此选项对其不必要的权限进行限制。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'SingleFlow',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'SingleFlow'\n      },\n      {\n        type: 'sub',\n        value: 'FrameworksAppletConfig > singleFlow'\n      },\n      {\n        type: 'text',\n        value: '开启历史层级流向控制。（frameworks 程序卡专属配置）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface FrameworksAppletConfig {\n              singleFlow?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '只允许程序卡的历史回退方向往 level 较小的程序卡回退，若在返回时，返回的程序卡 level 层级若大于或等于当前程序卡层级，则直接跳过该程序卡，继续返回到历史记录中更早的程序卡，直至条件符合。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    singleFlow: true\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '例如从生成订单功能的程序卡到支付订单的程序卡付款成功后进入我的订单模块程序卡，其在完成后进行回退时可通过开启配置项并结合程序卡level规则，使其直接回到订单生程序卡，而无需经过订单完成过程中的各个程序卡。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'SingleLock',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'SingleLock'\n      },\n      {\n        type: 'sub',\n        value: 'FrameworksAppletConfig > singleLock'\n      },\n      {\n        type: 'text',\n        value: '当程序卡回退到程序出口（level === 0 的程序卡）时，进行返回操作时组织历史继续回退。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface FrameworksAppletConfig {\n              singleLock?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '当回退被锁定时，继续回退会开始记录回退次数，并可通过 frameworks Applet 中的 [holdBack] 配置来决定程序卡是否允许退出。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                frameworks: {\n                  config: {\n                    singleLock: true,\n                    holdBack: (event) => {\n                      // 判断是否退出\n                      return true\n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: '如上配置，从其它页面跳转进入到应用时，当点击浏览器返回按钮时并不会退出应用页面，而是会通过 Frameworks Applet 中的 [holdBack] 配置进行判断是否应该被退出，并同时返回用户点击返回按钮的次数。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Source',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Source'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > source'\n      },\n      {\n        type: 'text',\n        value: '定义程序卡的 HTML 源代码，该源代码将在 Lath 创建的容器内运行。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              source?: EitherOr<{\n                src?: string\n                html?: string | (() => Promise<string> | string)\n              }, 'src', 'html'>,\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '可设置为源码模式与链接模式两种模式。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'text',\n        value: '<b>源码模式</b>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    title: 'Home Page',\n                    source: {\n                      html: \\`\n                        &lt;html lang=\"en\">\n                        &lt;head>&lt;/head>\n                        &lt;body>\n                          Hello World!\n                        &lt;/body>\n                        &lt;/html>\n                        \\`\n                    },\n                    ...\n                  }\n                },\n                ...\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: '<b>链接模式</b>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"js\">\n            export default {\n              config: {\n                  title: 'Home Page',\n                  source: {\n                  src: 'http://yoursite.com'\n                }\n              }\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: '两种模式选其一，若共存时将以 src 链接模式优先。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '使用链接模式时需符合同源策略，否者某些能力将无法开启，比如 Capture、Apply、Inject 等。若需要使用这些特性，则需要将目标页面也同样接入 lath，并开启“隧穿”模式，可参考“PresetConfig > tunneling”。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Install & Preface',\n  content: [\n    [\n      {\n        type: 'title',\n        value: '概念'\n      },\n      {\n        type: 'text',\n        value: '快速入门前，让我们先了解一下基本概念。'\n      },\n      {\n        type: 'text',\n        value: `\n          <ul>\n            <li><b>Application</b>: 一个 Lath 应用是由若干个程序卡（Applet）组成的。</li>\n            <li><b>Applet</b>: 一个程序卡是由一个页面或一个 View、以及其有关配置文件所组成的。</li>\n            <li><b>FrameworksApplet</b>: 每个 Lath 应用必有一个框架类型的程序卡，其主要承载公共能力，比如导航栏等等。</li>\n          </ul>\n        `\n      },\n      {\n        type: 'tips',\n        value: 'Lath 应用实际上是一个 SPA（单页应用），它所对应的路由视图可以是自己内部的一个切片视图也可以是外部的一个页面视图，无论是哪种类型的视图，其都是作为一个 Applet 的实体内容存在的。'\n      },\n    ],\n    [\n      {\n        type: 'title',\n        value: '使用'\n      },\n      {\n        type: 'text',\n        value: '假使我们现在要制作一个 SPA（单页面）应用，并且我们已经制作好应用对应的每一个路由页面，那么我们只需要通过下面的方式将其组装：'\n      },\n      {\n        type: 'text',\n        value: '使用 <b>&lt;define-application></b> 容器作为根节点来包裹页整个面内容，使页面被声明为一个 Lath 应用，然后在其内部使用 <b>&lt;define-applet></b> 容器包裹具体的路由视图（我们可以理解为传统 SPA 应用中的一个页面）使包裹视图被声明为一个 Applet 实体的视图。'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type='html'>\n            &lt;body>\n              &lt;define-application default-applet=\"appletA\">\n                &lt;define-applet applet-id=\"appletA\">\n                  &lt;div>\n                    This is the content of 'appletA'\n                  &lt;/div>\n                &lt;/define-applet>\n                &lt;define-applet applet-id=\"appletB\">\n                  &lt;div>\n                    This is the content of 'appletB'\n                  &lt;/div>\n                &lt;/define-applet>\n              &lt;/define-application>\n            &lt;/body>\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: `\n          <ul>\n            <li>&lt;define-application> 上的属性 <b>“default-applet”</b> 可指定一个 Applet 名，做为初始化应用时的默认视图，即用户最早可见的视图。</li>\n            <li>&lt;define-applet> 上的属性 <b>“applet-id”</b> 为声明的 Applet 名。</li>\n          </ul>\n        `\n      },\n      {\n        type: 'tips',\n        value: '“default-applet” 为 &lt;define-application> 包裹中已经通过 &lt;define-applet> 所声明的 Applet，当页面在浏览器中打开时仅该指定的 Applet 视图是可见的，其余视图则不可见。'\n      },\n      {\n        type: 'text',\n        value: '使用标签包裹是创建 Lath 应用的第一步，下面我们还要为每个已声明的 Applet 进行特性配置，比如为每个 Applet 设定一个标题。'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            import { createApplication } from 'lath'\n            createApplication({\n              applets: {\n                frameworks: {\n                  config: {\n                    title: 'Lath Demo'\n                  }\n                },\n                appletA: {\n                  config: {\n                    title: 'Page A'\n                  }\n                },\n                appletB: {\n                  config: {\n                    title: 'Page B'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: '我们使用 &lt;define-application> 容器是为了声明应用，但要真正启动应用还需要执行 <a to-applet=\"doc?id=install\" clone-as=\"popDoc\">createApplication</a> 方法，并传入 Applet 相关配置。'\n      },\n      {\n        type: 'text',\n        value: '不出意外我们将得到一个“施了魔法”的页面，此时我们可以通过 A 链接或 <a to-applet=\"doc?id=applicationTo\" clone-as=\"popDoc\">Application.to</a> 等方法路由到已定义的程序卡视图上。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '一般情况下我们不会将应用中所有可能被加载的路由页面都一次性集成在一个页面中，而是希望能按需载入，那我们只需通过配置信息来表达即可：'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            import { createApplication } from 'lath'\n            createApplication({\n              applets: {\n                frameworks: {\n                  config: {\n                    title: 'Lath Demo'\n                  }\n                },\n                home: {\n                  config: {\n                    title: 'home',\n                    source: {\n                      src: 'https://www.yoursite.com/home.html' \n                    }\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'text',\n        value: 'Applet 的视图不光可以通过 &lt;define-applet> 进行声明，也可以通过配置项  <a to-applet=\"doc?id=source\" clone-as=\"popDoc\">source</a> 进行声明。'\n      },\n      {\n        type: 'text',\n        value: '当使用 source 定义 Applet 视图时则无需再使用 &lt;define-applet> 进行声明。'\n      },\n      {\n        type: 'tips',\n        value: '一般我们会将 frameworks 程序卡和首屏程序卡通过 &lt;define-applet> 的方式进行声明，其余程序卡则通过配置 source 的方式进行声明，这样可以保证最大程度的首屏加载速度。'\n      },\n    ],\n    [\n      {\n        type: 'title',\n        value: '常见问题'\n      },\n      {\n        type: 'text',\n        value: '<b>使用 &lt;define-applet> 声明后滚动事件去哪了？</b>'\n      },\n      {\n        type: 'text',\n        value: '每一个 Applet 视图都相当于是一个完整的页面内容，其都应具有自身的滚动容器，因此当使用 &lt;define-applet> 进行声明后，其内部和滚动事件相关的逻辑需要从“body”中移除，修改绑定到自身的 &lt;define-applet> 标签元素上。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<b>如何引入跨域的页面视图？</b>'\n      },\n      {\n        type: 'text',\n        value: '当使用 source 声明 Applet 的视图，若其 src 页面指向为一个跨域页面，则该页面中的被代理类型的能力将会受到限制，若要解决此问题可在引用页面中同样引入 Lath 并开启选项 <a to-applet=\"doc?id=tunneling\" clone-as=\"popDoc\">PresetConfig > tunneling</a> 来解除一些限制。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<b>Lath 对执行时机有要求吗？</b>'\n      },\n      {\n        type: 'text',\n        value: 'Lath 作为体验加强容器并非是首屏上所必须的，因此我们建议在首屏加载完成后再执行 createApplication 方法，不阻塞首屏内容呈现。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<b>Typescript&JSX 警告？</b>'\n      },\n      {\n        type: 'text',\n        value: '当使用 Typescript 在 React 环境时，我们需要对容器的标签进行类型定义，否则 ts 将会产生警告，此时在项目中添加该 type.d.ts 文件即可。'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type='ts'>\n            // type.d.ts\n            import 'lath'\n            declare namespace JSX {\n              interface IntrinsicElements {\n                'define-applet': {\n                  children: Element\n                  'applet-id': string\n                }\n                'define-application': {\n                  children: Element\n                  'default-applet': string\n                }\n              }\n            }\n          </code-highlight>\n        `\n      },\n    ]\n  ]\n}","export default {\n  title: 'TapStatusBarToScrollToTop',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'TapStatusBarToScrollToTop'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > tapStatusBarToScrollToTop'\n      },\n      {\n        type: 'text',\n        value: '开启后，在点击窗口顶部状态栏时，主滚动容器将滚动到顶部。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              tapStatusBarToScrollToTop?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '该选项将将反映在主滚动上，主滚动条请参考配置项“mainScrollId”，默认主滚动关联为程序卡的 body 容器。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    tapStatusBarToScrollToTop: true\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '该选项的启动须依赖配置项“mainScrollId”。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Timeout',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Timeout'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > timeout'\n      },\n      {\n        type: 'text',\n        value: '程序卡生命周期的有效时长，单位为毫秒。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              timeout?: number\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '程序卡符合缓存条件或设置为允许背景运行(background=true)时，程序卡在二次进入前会检查过期情况，当检查到程序卡已过期时将会进行更新操作。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    timeout: 36000\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '若该值设置为 0 时，则背景运行(background=true)将不会生效。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Title',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Title'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > title'\n      },\n      {\n        type: 'text',\n        value: '程序卡标题，主要用于浏览器窗口标题的显示。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              title?: string\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '当窗口切换时，该配置项相当于页面中的 \"Title\" 标签的作用。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    title: 'Home Page'\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'tips',\n        value: '当 system 程序卡、 frameworks 程序卡 以及首页程序卡同时设置 title 时，它们的显示权重是： 首页程序卡 > frameworks 程序卡 > system 程序卡。而实际上 system 类型程序卡的此选项是不必要的，因为它从不会生效。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Transient',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Transient'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > transient'\n      },\n      {\n        type: 'text',\n        value: '标记该程序卡为临时模块。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              transient?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '在程序卡切换到后台时，会被立即销毁，并同时删除程序卡的所有临时配置数据。'\n      },\n      {\n        type: 'text',\n        value: '通过新窗口打开（A链接 或 API - pushWindow）的 url 类型程序卡（即无自定义配置的临时模块），会被自动进行该标记。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                demoPage: {\n                  config: {\n                    transient: true\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '一般当你的程序卡不存在重复利用时可使用该参数，比如无法枚举的通过动态生成的程序卡。'\n      },\n      {\n        type: 'tips',\n        value: '该配置项的意义是什么？当 A链接所访问的生成模块时，由于链接无法枚举，因此会累积很多无用的程序卡配置，因此开启该选项能够消除这些无意义的内存消耗。'\n      }\n    ],\n    [\n      {\n        type: 'title',\n        value: 'DisableTransient'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > disableTransient'\n      },\n      {\n        type: 'text',\n        value: 'DisableTransient 和 Transient 相呼应，可通过此参数来关闭默认的 Transient 行为。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              disableTransient?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '若在某种特殊情境下，模块无须定义任何配置（或开发者懒于设置）而实际上模块是可枚举的（自动生成的配置也是有意义的，其存在重用的可能而并非临时程序卡），因此配置该选项时可关闭自动清除生成的程序卡配置的机制。'\n      },\n    ]\n  ]\n}","export default {\n  title: 'Tunneling',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'Tunneling'\n      },\n      {\n        type: 'sub',\n        value: 'PresetConfig > tunneling'\n      },\n      {\n        type: 'text',\n        value: '设定应用为“隧穿模式”。（应用启动前的预配置项）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface PresetConfig {\n              tunneling?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'tips',\n        value: '若在当前域下访问跨域的程序卡，此时会因同源策略导致跨域的程序卡无法实现，全局样式变量更新以及[Apply]中的能力（比如新开窗口）。'\n      },\n      {\n        type: 'text',\n        value: '通过将跨域程序卡页面接入 Lath，并开启 [tunneling]来解决跨域程序卡页面的一些受限能力。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              tunneling: true,\n              applets: {\n                ...\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '当页面接入 Lath 且开启 [tunneling] 时，页面本身即为一个单独应用，但当该页面嵌入到另一个 Lath 应用作为程序卡时，其通过 A链接（即pushWindow）打开的页面将不会在本应用内打开，而是被代理到父级应用中打开，若父级应用也是被嵌入的 Lath 应用，且也开启了 [tunneling] 则会继续向上“隧穿”。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'Tutorial',\n  content: [\n    [\n      {\n        type: 'title',\n        value: '制作滑动卡片效果'\n      },\n      {\n        type: 'brief',\n        value: '滑动切卡效果就是将多个 Applet 并排一列，通过左右的滑动手势实现 Applet 之间的切换。'\n      },\n      {\n        type: 'text',\n        value: `\n          <div style=\"display: flex; width: 100%; box-sizing: border-box; height: 300px; padding: 10px; border-radius: 18px; background: linear-gradient(300deg, #ed6f89, #ff8351);\">\n            <div style=\"min-width: 90%; height: 260px; border-radius: 18px; margin: 10px 0 0 -50%; border: 1px solid rgba(0,0,0,.1); background: #ff170045; color: #fff2ee70; line-height: 260px; font-size: 90px; text-indent: 20px;\">PageA</div>\n            <div style=\"min-width: 90%; height: 260px; border-radius: 18px; margin: 10px 0 0 10px; border: 1px solid rgba(0,0,0,.1); background: #ff000021; color:#000; line-height: 260px; font-size: 70px; text-indent: 20px;\">PageB</div>\n          </div>\n        `\n      },\n      {\n        type: 'text',\n        value: '这会很容易让我们联想到 <b>Tab</b> 功能，但他们存在一些微的小区别，比如 Tab 一般是不具有滑动手势的。'\n      },\n      {\n        type: 'text',\n        value: '我们在实现这个效果前需要确定滑动卡片的效果是由哪个视图承接的，即实现该效果的 Applet 是谁，同时在这个视图中所嵌套的并排可滑动的 Applet 是谁？确定好这些之后我们就可以开始创建效果了，用到配置项 <a applet-to=\"defaultSlideViewApplets\" clone-as=\"popDocs\">defaultSlideViewApplets</a>'\n      },\n      {\n        type: 'text',\n        value: '假使我们有三个 Applet 分别命名为 A、 B 、C，我们希望有一个视图可以同时承载 ABC 三个 Applet，并使它们能够呈现 Slider 效果。'\n      },\n      {\n        type: 'text',\n        value: '我们新建一个 Applet D，它并不具备任何自身的视图，而仅是作为空容器将 ABC三个 Applet 引入进来，那么此时我们导航进入到 D时就可看到一个 Slider 效果的视图了，如果我们希望访问到 B，则只需先访问 D 再访问 B，若已经存在 D 则可直接访问 B 即可。'\n      },\n      {\n        type: 'code',\n        value: `\n        <code-highlight type=\"ts\">\n          createApplication({\n            applets: {\n              frameworks: {\n                config: {\n                  index: 'D'\n                }\n              },\n              A: {\n                config: {\n                  source: {\n                    src: './a.html'\n                  }\n                }\n              },\n              B: {\n                config: {\n                  source: {\n                    src: './b.html'\n                  }\n                }\n              },\n              C: {\n                config: {\n                  source: {\n                    src: './c.html'\n                  }\n                }\n              },\n              D: {\n                config: {\n                  defaultSlideViewApplets: [\n                    {\n                      id: \"A\",\n                      activate: 'instant'\n                    },\n                    {\n                      id: \"B\",\n                      activate: 'lazy'\n                    },\n                    {\n                      id: \"C\",\n                      activate: 'lazy'\n                    }\n                  ]\n                }\n              }\n            }\n          })\n        </code-highlight>\n        `\n      },\n    ]\n  ]\n}","export default {\n  title: 'UnuseShadowDom',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'UnusedShadowDom'\n      },\n      {\n        type: 'sub',\n        value: 'PresetConfig > unusedShadowDom'\n      },\n      {\n        type: 'text',\n        value: '框架是否使用 ShadowDom 模式。（应用启动前的预配置项）'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface PresetConfig {\n              unusedShadowDom?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'tips',\n        value: '关于 ShadowDom 的更多信息，请查看 W3C 的介绍。'\n      },\n      {\n        type: 'text',\n        value: '若你通过 createApplication 指定“index”的模式启动应用时，进行预置的程序卡节点会被直接移动到 ShadowDom 中，此时会造成存在节点外的样式及依赖缺失（比如一些依赖的脚本事件绑定元素和动态注入的全局样式等）。'\n      },\n      {\n        type: 'text',\n        value: '默认情况下 ShadowDom 模式已经时关闭的，你无需设定改选项，如果你不存在上述问题，且希切片的程序卡之间不会产生一些干扰，则可以关闭改选项，此时同页面中的切片产生的程序卡则互相之间产生作用域。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              tunneling: true,\n              applets: {\n                ...\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '极少情况下会使用到该配置，当然如果你能使用 &lt;define-applet> 来代替将会是更好的选择。'\n      }\n    ]\n  ]\n}","export default {\n  title: 'UseMirroring',\n  content: [\n    [\n      {\n        type: 'title',\n        value: 'UseMirroring'\n      },\n      {\n        type: 'sub',\n        value: 'AppletConfig > useMirroring'\n      },\n      {\n        type: 'text',\n        value: '持久化保存上次访问的镜像文件，以便下次访问时快速呈现。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Types</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            interface AppletBaseConfig {\n              useMirroring?: boolean\n            }\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Details</h3>'\n      },\n      {\n        type: 'text',\n        value: '当程序卡页面销毁时，将会对其内部 HTML 进行本地化持久存储，当下次访问时会立刻呈现上次访问结果，直到新内容加载完成后消失。'\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Example</h3>'\n      },\n      {\n        type: 'code',\n        value: `\n          <code-highlight type=\"ts\">\n            createApplication({\n              applets: {\n                home: {\n                  config: {\n                    useMirroring: true\n                  }\n                }\n              }\n            })\n          </code-highlight>\n        `\n      },\n      {\n        type: 'hr'\n      },\n      {\n        type: 'text',\n        value: '<h3>Notes</h3>'\n      },\n      {\n        type: 'text',\n        value: '当本地存储溢出时会清空所有 localStorge 本地数据，一般在一些变动频次较低的场景使用，使用前请充分考虑展示逻辑的合理性。'\n      },\n      {\n        type: 'tips',\n        value: '镜像的还原不能存储和还原页面中的 Web Components、 ShadowDom 以及 iframe、canvas、object 等嵌入媒体，当使用该选项时应当考虑这些因素。'\n      }\n    ]\n  ]\n}"],"names":[],"sourceRoot":""}