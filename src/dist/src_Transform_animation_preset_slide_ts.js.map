{"version":3,"file":"src_Transform_animation_preset_slide_ts.js","mappings":";;;;;;;;;;;;;AAEA,iEAAe,CAAC,IAAY,EAAE,EAAE;IAC9B,OAAO,CAAC,CAAwB,EAAE,EAAE;QAClC,IAAI,GAAG,GAAG,CAAC;QACX,IAAI,IAAI,GAAG,CAAC;QACZ,IAAI,GAAG,GAAG,CAAC;QACX,IAAI,IAAI,GAAG,CAAC;QACZ,IAAI,QAAQ,GAAG,GAAG;QAElB,QAAQ,IAAI,EAAE;YACZ,KAAK,CAAC;gBACJ,IAAI,GAAG,CAAC,CAAC,MAAM;gBACf,GAAG,GAAG,CAAC,IAAI;gBACX,GAAG,GAAG,IAAI,GAAG,CAAC;gBACd,MAAK;YACP,KAAK,CAAC;gBACJ,GAAG,GAAG,CAAC,CAAC,KAAK;gBACb,IAAI,GAAG,CAAC,GAAG;gBACX,GAAG,GAAG,IAAI,GAAG,CAAC;gBACd,MAAK;YACP,KAAK,CAAC;gBACJ,GAAG,GAAG,CAAC,CAAC,MAAM;gBACd,IAAI,GAAG,CAAC,GAAG;gBACX,GAAG,GAAG,IAAI,GAAG,CAAC;gBACd,MAAK;YACP,KAAK,CAAC;gBACJ,IAAI,GAAG,CAAC,CAAC,KAAK;gBACd,GAAG,GAAG,CAAC,IAAI;gBACX,GAAG,GAAG,IAAI,GAAG,CAAC;gBACd,MAAK;SACR;QAED,IAAI,CAAC,CAAC,OAAO,EAAE;YACb,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC5E,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;gBACtE,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;oBACzF,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;gBACnB,CAAC,CAAC;YACJ,CAAC,CAAC;SACH;aAAM;YACL,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;gBACxC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;oBACjE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;gBACnB,CAAC,CAAC;gBACF,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;YAC5G,CAAC,CAAC;SACH;QAED,UAAU,CAAC,GAAG,EAAE;YACd,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QACnB,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;IAClB,CAAC;AACH,CAAC","sources":["webpack://lath/./src/Transform/animation/preset/slide.ts"],"sourcesContent":["import { TransformAnimateEvent } from '../../../types'\n\nexport default (type: number) => {\n  return (e: TransformAnimateEvent) => {\n    let inX = 0\n    let outX = 0\n    let inY = 0\n    let outY = 0\n    let duration = 767\n\n    switch (type) {\n      case 0:\n        outY = e.height\n        inY = -outY\n        inX = outX = 0\n        break\n      case 1:\n        inX = e.width\n        outX = -inX\n        inY = outY = 0\n        break\n      case 2:\n        inY = e.height\n        outY = -inY\n        inX = outX = 0\n        break\n      case 3:\n        outX = e.width\n        inX = -outX\n        inY = outY = 0\n        break\n    }\n\n    if (e.reverse) {\n      e.in.duration(0).filter('brightness(0.3)').to(inX * .1, inY * .1, 0).end(() => {\n        e.out.duration(duration).ease('ease-out-expo').to(outX, outY, 0).end()\n        e.in.duration(duration).ease('ease-out-expo').filter('brightness(1)').to(0, 0, 0).end(() => {\n          e.callback(false)\n        })\n      })\n    } else {\n      e.in.duration(0).to(inX, inY, 0).end(() => {\n        e.in.duration(duration).ease('ease-out-expo').to(0, 0, 0).end(() => {\n          e.callback(false)\n        })\n        e.out.duration(duration).ease('ease-out-expo').filter('brightness(0.3)').to(outX * .5, outY * .5, 0).end()\n      })\n    }\n\n    setTimeout(() => {\n      e.callback(false)\n    }, duration * 2)\n  }\n}\n"],"names":[],"sourceRoot":""}